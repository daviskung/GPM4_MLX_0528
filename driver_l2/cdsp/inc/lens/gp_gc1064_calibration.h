#ifndef __GP_GC1064_CALIBRATION_H__
#define __GP_GC1064_CALIBRATION_H__

#include "..\gp_LensDef.h"
#include "..\drv_l2_user_preference.h"

static const short g_ob[15] =
{
	0, // obautoen
	0, // ob_type
	0, // obHOffset
	0, // obVOffset

	1, // obmanuen
	0, // maunob

	1, // wboffseten
	0, // wbo_r
	0, // wbo_gr
	0, // wbo_gb
	0, // wbo_b

	1, // badpixen
	160, // bprthr
	160, // bpgthr
	160, // bpbthr
};
#if ( (USE_CV_Prefer == 0) )
static const unsigned int g_gamma[] =
{
0x000000, 0x000000, 0x044401, 0x111405, 0x111109, 0x11110d, 0x111111, 0x111115,
0x041119, 0x04441d, 0x110421, 0x011124, 0x044428, 0x01112b, 0x10442f, 0x041132,
0x111036, 0x104439, 0x04413c, 0x04413f, 0x041142, 0x041145, 0x041148, 0x10414b,
0x10414e, 0x010451, 0x041054, 0x104156, 0x010459, 0x04105c, 0x01015e, 0x041061,
0x010463, 0x104066, 0x041068, 0x01046a, 0x00416c, 0x10406f, 0x101071, 0x041073,
0x040475, 0x040477, 0x040479, 0x10047b, 0x10107d, 0x00107f, 0x004081, 0x010083,
0x040184, 0x101086, 0x004088, 0x010189, 0x10048b, 0x00408d, 0x04018e, 0x001090,
0x040191, 0x001093, 0x040095, 0x001096, 0x040197, 0x004099, 0x10049a, 0x01009c,
0x00109d, 0x10019e, 0x0100a0, 0x0010a1, 0x1001a2, 0x0400a4, 0x0040a5, 0x0004a6,
0x1001a7, 0x0100a9, 0x0040aa, 0x0004ab, 0x1001ac, 0x0400ae, 0x0100af, 0x0010b0,
0x0004b1, 0x1001b2, 0x0400b4, 0x0100b5, 0x0010b6, 0x0004b7, 0x1000b9, 0x0400ba,
0x0040bb, 0x0010bc, 0x0001bd, 0x0400bf, 0x0100c0, 0x0010c1, 0x0001c2, 0x0400c4,
0x0040c5, 0x0004c6, 0x0400c8, 0x0040c9, 0x0004ca, 0x0400cc, 0x0040cd, 0x1001ce,
0x0100d0, 0x0004d1, 0x0100d3, 0x0010d4, 0x0100d6, 0x1004d7, 0x0100d9, 0x1004da,
0x0040dc, 0x0100de, 0x1004df, 0x0010e1, 0x0100e3, 0x0401e4, 0x0404e6, 0x1010e8,
0x0010ea, 0x0040ec, 0x0040ee, 0x0040f0, 0x0040f2, 0x0040f4, 0x1010f6, 0x0410f8
/*
	//H22 ,此Table清晰度較好 
0x04510d, 0x051112, 0x111417, 0x14451b, 0x111120, 0x044425, 0x111129, 0x05112d,
0x044432, 0x044436, 0x04443a, 0x04443e, 0x044442, 0x110446, 0x111149, 0x04444d,
0x111051, 0x044154, 0x111058, 0x10445b, 0x04415e, 0x011062, 0x011065, 0x010468,
0x01046b, 0x01046e, 0x041071, 0x041074, 0x104176, 0x010479, 0x04107c, 0x00417e,
0x041081, 0x010183, 0x101086, 0x040488, 0x01018a, 0x10408d, 0x10108f, 0x041091,
0x040493, 0x040495, 0x040497, 0x040499, 0x10109b, 0x00109d, 0x00409f, 0x0101a0,
0x1004a2, 0x0010a4, 0x0100a6, 0x1004a7, 0x0040a9, 0x1001aa, 0x0040ac, 0x1001ad,
0x0100af, 0x0004b0, 0x0400b2, 0x0040b3, 0x0004b4, 0x0400b6, 0x0100b7, 0x0010b8,
0x0004b9, 0x1000bb, 0x0400bc, 0x0100bd, 0x0040be, 0x0010bf, 0x0004c0, 0x0004c1,
0x0001c2, 0x0001c3, 0x0000c5, 0x0000c6, 0x0000c7, 0x0000c8, 0x0000c9, 0x0000ca,
0x0000cb, 0x0000cc, 0x0000cd, 0x0000ce, 0x0000cf, 0x0000d0, 0x0001d0, 0x0001d1,
0x0001d2, 0x0001d3, 0x0001d4, 0x0001d5, 0x0001d6, 0x0001d7, 0x0001d8, 0x0001d9,
0x0000db, 0x0000dc, 0x1000dd, 0x0400de, 0x0400df, 0x0100e0, 0x0040e1, 0x0010e2,
0x0004e3, 0x1000e5, 0x0100e6, 0x0040e7, 0x0004e8, 0x1000ea, 0x0100eb, 0x0004ec,
0x0400ee, 0x0040ef, 0x1001f0, 0x0040f2, 0x1004f3, 0x0040f5, 0x0401f6, 0x0010f8,
0x0100fa, 0x0404fb, 0x1010fd, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff
*/
//u2.2016.01.05 H42 此對比度變高但暗處太暗 
/*
	0x000000, 0x000000, 0x000000, 0x000000, 0x110000, 0x111102, 0x045106, 0x04440b,
	0x04440f, 0x044413, 0x044417, 0x04441b, 0x11041f, 0x111122, 0x044126, 0x10442a,
	0x01112d, 0x104431, 0x041134, 0x110438, 0x04443b, 0x04113e, 0x011042, 0x010445,
	0x110448, 0x11044b, 0x01044e, 0x010451, 0x011054, 0x041057, 0x104159, 0x01045c,
	0x04105f, 0x104161, 0x010464, 0x104067, 0x010469, 0x10416b, 0x04106e, 0x010170,
	0x104073, 0x041075, 0x040477, 0x010179, 0x01017b, 0x00407e, 0x004080, 0x004082,
	0x004084, 0x004086, 0x004088, 0x010189, 0x01018b, 0x04048d, 0x10108f, 0x004091,
	0x010093, 0x040194, 0x001096, 0x004098, 0x040199, 0x00109b, 0x01009d, 0x10049e,
	0x0100a0, 0x1004a1, 0x0040a3, 0x1004a4, 0x0100a6, 0x0004a7, 0x0100a9, 0x0010aa,
	0x0400ac, 0x0040ad, 0x1001ae, 0x0100b0, 0x0010b1, 0x0401b2, 0x0040b4, 0x0004b5,
	0x0400b7, 0x0040b8, 0x0004b9, 0x0400bb, 0x0040bc, 0x0004bd, 0x0400bf, 0x0040c0,
	0x0004c1, 0x1001c2, 0x0100c4, 0x0010c5, 0x1001c6, 0x0100c8, 0x0004c9, 0x0400cb,
	0x0040cc, 0x0004cd, 0x0400cf, 0x0010d0, 0x1001d1, 0x0040d3, 0x1004d4, 0x0100d6,
	0x0004d7, 0x0100d9, 0x0010da, 0x0100dc, 0x0004dd, 0x0100df, 0x1004e0, 0x0040e2,
	0x0401e3, 0x0010e5, 0x0040e7, 0x0401e8, 0x1004ea, 0x0040ec, 0x0100ee, 0x0401ef,
	0x0404f1, 0x1010f3, 0x1010f5, 0x0040f7, 0x0040f9, 0x0040fb, 0x0040fd, 0x0000ff,
*/
};
#else

#if (CV_IS_COLORMATRIX_GAMMA_ORDER == 0)
static const unsigned int g_gamma[] =
{
0x111110, 0x044415, 0x044419, 0x04441d, 0x044421, 0x044425, 0x044429, 0x04442d,
0x111130, 0x041134, 0x044438, 0x11113b, 0x04443f, 0x011142, 0x104446, 0x044149,
0x04114c, 0x011050, 0x110453, 0x104456, 0x104459, 0x10445c, 0x11045f, 0x010462,
0x041065, 0x041068, 0x10416a, 0x01046d, 0x041070, 0x104172, 0x041075, 0x104177,
0x04107a, 0x01017c, 0x10107f, 0x040481, 0x010183, 0x104086, 0x041088, 0x04048a,
0x01018c, 0x01018e, 0x004190, 0x004093, 0x004095, 0x004097, 0x004099, 0x00409b,
0x01009d, 0x01019e, 0x0401a0, 0x0404a2, 0x1010a4, 0x0040a6, 0x0100a8, 0x0401a9,
0x1004ab, 0x0010ad, 0x0100af, 0x0401b0, 0x0010b2, 0x0040b4, 0x0401b5, 0x0010b7,
0x0100b9, 0x0404ba, 0x0010bc, 0x0100be, 0x1004bf, 0x0040c1, 0x0401c2, 0x0010c4,
0x0100c6, 0x1004c7, 0x0040c9, 0x0401ca, 0x0010cc, 0x0100ce, 0x1004cf, 0x0040d1,
0x0401d2, 0x0010d4, 0x0100d6, 0x1004d7, 0x0010d9, 0x0100db, 0x0404dc, 0x0010de,
0x0100e0, 0x0401e1, 0x1004e3, 0x0040e5, 0x0100e7, 0x0401e8, 0x0404ea, 0x1010ec,
0x0010ee, 0x0040f0, 0x0040f2, 0x0100f4, 0x0101f5, 0x0101f7, 0x0101f9, 0x0101fb,
0x0041fd, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,
};
#else

//以最亮那格為210當做基準 
#if (SENSOR_TYPE == 1)
static const unsigned int g_gamma[] =
{
0x000000, 0x000000, 0x000000, 0x001000, 0x010002, 0x040403, 0x001005, 0x010007,
0x100408, 0x00400a, 0x01010b, 0x10040d, 0x00400f, 0x010110, 0x100412, 0x004014,
0x010016, 0x040417, 0x001019, 0x00401b, 0x04011c, 0x10041e, 0x004020, 0x010022,
0x040123, 0x101025, 0x004027, 0x010029, 0x04012a, 0x10042c, 0x00102e, 0x004030,
0x010032, 0x040133, 0x100435, 0x101037, 0x004039, 0x00403b, 0x01013c, 0x04013e,
0x040440, 0x101042, 0x101044, 0x004046, 0x004048, 0x01004a, 0x01014b, 0x01014d,
0x04044f, 0x040451, 0x040453, 0x100455, 0x101057, 0x101059, 0x10105b, 0x10105d,
0x10105f, 0x101061, 0x101063, 0x101065, 0x101067, 0x101069, 0x10106b, 0x10106d,
0x10106f, 0x101071, 0x101073, 0x041075, 0x040477, 0x040479, 0x04047b, 0x01017d,
0x01017f, 0x010181, 0x004084, 0x104086, 0x101088, 0x04108a, 0x04048c, 0x01048e,
0x010190, 0x004192, 0x104095, 0x101097, 0x040499, 0x01049b, 0x00419d, 0x1040a0,
0x1010a2, 0x0404a4, 0x0101a6, 0x0040a9, 0x1010ab, 0x0404ad, 0x0101af, 0x1040b2,
0x0410b4, 0x0104b6, 0x0041b8, 0x1010bb, 0x0404bd, 0x0101bf, 0x1010c2, 0x0404c4,
0x0101c6, 0x1010c9, 0x0104cb, 0x0041cd, 0x0410d0, 0x0104d2, 0x1040d5, 0x0404d7,
0x0041d9, 0x0410dc, 0x0104de, 0x1010e1, 0x0104e3, 0x1040e6, 0x0404e8, 0x1041ea,
0x0404ed, 0x1041ef, 0x0410f2, 0x1041f4, 0x0404f7, 0x1041f9, 0x0104fc, 0x0001fe,
/*
0x000000, 0x040100, 0x001002, 0x004004, 0x040105, 0x001007, 0x010009, 0x10040a,
0x00400c, 0x01010d, 0x10040f, 0x004011, 0x040112, 0x100414, 0x004016, 0x040117,
0x100419, 0x00401b, 0x04011c, 0x10041e, 0x004020, 0x010022, 0x100423, 0x001025,
0x010027, 0x040128, 0x10042a, 0x00402c, 0x01002e, 0x04012f, 0x101031, 0x004033,
0x010035, 0x040136, 0x100438, 0x00103a, 0x00403c, 0x01003e, 0x04013f, 0x040441,
0x101043, 0x001045, 0x004047, 0x010049, 0x01014a, 0x04014c, 0x04044e, 0x100450,
0x101052, 0x101054, 0x001056, 0x004058, 0x00405a, 0x00405c, 0x00405e, 0x004060,
0x004062, 0x004064, 0x004066, 0x004068, 0x00406a, 0x00406c, 0x00406e, 0x101070,
0x101072, 0x101074, 0x040476, 0x040478, 0x01017a, 0x01017c, 0x00407f, 0x101081,
0x041083, 0x040485, 0x010187, 0x00408a, 0x10108c, 0x04048e, 0x010190, 0x104093,
0x041095, 0x010497, 0x104199, 0x04109c, 0x01049e, 0x1040a1, 0x0404a3, 0x0041a5,
0x0410a8, 0x0104aa, 0x1010ad, 0x0104af, 0x1010b2, 0x0104b4, 0x1010b7, 0x0104b9,
0x0410bc, 0x1041be, 0x0410c1, 0x1041c3, 0x0104c6, 0x0410c9, 0x1041cb, 0x0104ce,
0x0410d1, 0x1041d3, 0x1044d6, 0x0104d9, 0x0410dc, 0x0441de, 0x1041e1, 0x1104e4,
0x0104e7, 0x0104ea, 0x0410ed, 0x0410f0, 0x0411f2, 0x0411f5, 0x0411f8, 0x0411fb,
0x0001fe, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,*/
};

#elif(SENSOR_TYPE == 2)
static const unsigned int g_gamma[] =
{
0x000000, 0x000000, 0x000000, 0x004000, 0x040101, 0x001003, 0x010005, 0x100406,
0x004008, 0x040109, 0x00100b, 0x01000d, 0x04010e, 0x001010, 0x010012, 0x100413,
0x001015, 0x010017, 0x100418, 0x00401a, 0x01001c, 0x10041d, 0x00101f, 0x010021,
0x040422, 0x001024, 0x004026, 0x040127, 0x100429, 0x00402b, 0x01002d, 0x04012e,
0x101030, 0x004032, 0x010034, 0x040135, 0x100437, 0x001039, 0x00403b, 0x01013c,
0x04043e, 0x101040, 0x001042, 0x004044, 0x010145, 0x040147, 0x040449, 0x10104b,
0x10104d, 0x00404f, 0x004051, 0x010053, 0x010154, 0x040156, 0x040458, 0x04045a,
0x10045c, 0x10105e, 0x101060, 0x101062, 0x101064, 0x101066, 0x101068, 0x10106a,
0x10106c, 0x10106e, 0x101070, 0x101072, 0x101074, 0x101076, 0x101078, 0x04047a,
0x04047c, 0x04047e, 0x010180, 0x010182, 0x004184, 0x004087, 0x101089, 0x04108b,
0x04048d, 0x01018f, 0x004191, 0x104094, 0x101096, 0x040498, 0x01019a, 0x00419c,
0x10109f, 0x0404a1, 0x0101a3, 0x1040a6, 0x0410a8, 0x0104aa, 0x0041ac, 0x0410af,
0x0104b1, 0x1041b3, 0x0410b6, 0x0101b8, 0x1010bb, 0x0104bd, 0x1041bf, 0x0410c2,
0x0041c4, 0x0410c7, 0x0101c9, 0x0410cc, 0x0101ce, 0x0410d1, 0x0041d3, 0x0410d6,
0x1041d8, 0x0104db, 0x1041dd, 0x0104e0, 0x0410e3, 0x1041e5, 0x0104e8, 0x0410eb,
0x1041ed, 0x0104f0, 0x0410f3, 0x1041f5, 0x0104f8, 0x0410fb, 0x0010fe, 0x0000ff,
};
#endif



#endif//#if (CV_IS_COLORMATRIX_GAMMA_ORDER == 0)
#endif

static const unsigned short g_wb_gain[61][2] =
{	/*2000K~8000K*/
	{27 ,133},
	{31 ,131},
	{34 ,129},
	{38 ,126},
	{41 ,124},
	{43 ,122},
	{46 ,120},
	{49 ,118},
	{51 ,117},
	{53 ,115},
	{55 ,113},
	{57 ,111},
	{59 ,109},
	{61 ,108},
	{62 ,106},
	{64 ,104},
	{65 ,103},
	{66 ,101},
	{67 ,100},
	{68 ,98 },
	{69 ,97 },//40
	{70 ,95 },
	{71 ,94 },
	{72 ,92 },
	{73 ,91 },
	{74 ,90 },
	{74 ,89 },
	{75 ,87 },
	{76 ,86 },
	{77 ,85 },
	{78 ,84 },//50
	{78 ,83 },
	{79 ,82 },
	{80 ,81 },
	{81 ,80 },
	{82 ,79 },
	{83 ,78 },
	{84 ,77 },
	{85 ,76 },
	{86 ,76 },
	{88 ,75 },//60
	{89 ,74 },
	{90 ,74 },
	{92 ,73 },
	{94 ,72 },
	{96 ,72 },
	{98 ,71 },
	{100,71 },
	{102,70 },
	{104,70 },
	{107,70 },//70
	{110,69 },
	{113,69 },
	{116,69 },
	{119,68 },
	{123,68 },
	{127,68 },
	{131,68 },
	{135,68 },
	{139,68 },
	{144,68 } //80

};

static const short g_awb_thr[31] =
{
	200, // awbwinthr

	0*64, // sindata
	1*64, // cosdata

	 30, // Ythr0
	 90, // Ythr1
	140, // Ythr2
	200, // Ythr3

	// wb thr
	-4, //UL1N1
	 4, //UL1P1
	-3, //VL1N1
	 3, //VL1P1

	 -5, //UL1N2
	  5, //UL1P2
	 -4, //VL1N2
	  4, //VL1P2

	 -6, //UL1N3
	  6, //UL1P3
	 -4, //VL1N3
	  4, //VL1P3
	// without wb thr
	-21, // UL1N1
	-2, // UL1P1
	-14, // VL1N1
	 20, // VL1P1

	-31, //UL1N2
	-2, //UL1P2
	-22, //VL1N2
	 29, // VL1P2

	-54, // UL1N3
	-2, //UL1P3
	-32, // VL1N3
	 35, //VL1P3
};


#if ( (USE_CV_Prefer == 0) )
static const short g_color_matrix[9] =
{
	/*(short)(1.35710021313892340000*64),
    (short)(-0.5530298693042127200*64),
    (short)(0.19592965616528946000*64),
    (short)(-0.1364870632631542100*64),
    (short)(1.26799618774913840000*64),
    (short)(-0.1315091244859840100*64),
    (short)(0.11474140695766549000*64),
    (short)(-1.0694119814917977000*64),
    (short)(1.95467057453413220000*64)*/

	(short)(1.21255685141589460000*64),
    (short)(-0.24212103110495128000*64),
    (short)(0.02956417968905668600*64),
    (short)(-0.16453181510655629000*64),
    (short)(1.38021684645757150000*64),
    (short)(-0.21568503135101527000*64),
    (short)(0.05615436303892948300*64),
    (short)(-0.85326269506582897000*64),
    (short)(1.79710833202689950000*64)

};
#else

#if(CV_IS_COLORMATRIX_GAMMA_ORDER == 0)

static const short g_color_matrix[9] =
{
	(short) (1.20467660979848930000*64),
	(short) (-0.30922945693836817000*64),
	(short) (0.10455284713987885000*64),
	(short) (-0.14449193453703843000*64),
	(short) (1.36247349598803600000*64),
	(short) (-0.21798156145099759000*64),
	(short) (0.10250391200002504000*64),
	(short) (-0.84189711914829457000*64),
	(short) (1.73939320714826960000*64)
};

#else

#if (SENSOR_TYPE == 1)
static const short g_color_matrix[9] =
{
	(short)(1.47484864978050670000*64),
    (short)(-0.35682169045983403000*64),
    (short)(-0.11802695932067260000*64),
    (short)(-0.20539148315986486000*64),
    (short)(1.60883008091537020000*64),
    (short)(-0.40343859775550528000*64),
    (short)(0.01087474745288820700*64),
    (short)(-0.59476654086874936000*64),
    (short)(1.58389179341586120000*64)

};
#elif(SENSOR_TYPE == 2)

static const short g_color_matrix[9] =
{
	(short)(1.39558440900828900000*64),
    (short)(-0.31155961416722677000*64),
    (short)(-0.08402479484106238600*64),
    (short)(-0.19195680906716708000*64),
    (short)(1.52587123404250600000*64),
    (short)(-0.33391442497533891000*64),
    (short)(-0.01018079371824173200*64),
    (short)(-0.55018664476114432000*64),
    (short)(1.56036743847938600000*64)

};
#endif

#endif//#if(CV_IS_COLORMATRIX_GAMMA_ORDER == 0)

#endif//#if ( (USE_CV_Prefer == 0) )

const INT8U LiTable_rgb[48]=
{	//R*16,Gb/Gr*16,B*16
	0x1e,
	0x2e,
	0x3e,
	0x4e,
	0x5e,
	0x6e,
	0x7e,
	0x8e,
	0x9e,
	0xae,
	0xbe,
	0xce,
	0xde,
	0xee,
	0xfe,
	0xff,
	0x0f,
	0x1f,
	0x2f,
	0x3f,
	0x4f,
	0x5f,
	0x6f,
	0x7f,
	0x8f,
	0x9f,
	0xaf,
	0xbf,
	0xcf,
	0xdf,
	0xef,
	0xff,
	0x07,
	0x17,
	0x27,
	0x37,
	0x47,
	0x57,
	0x67,
	0x77,
	0x87,
	0x97,
	0xa7,
	0xb7,
	0xc7,
	0xd7,
	0xe7,
	0xf7
};

#if (USE_CV_Prefer == 0)
const INT16U MaxTan8[32]=
{
	/*0x0C0,
	0x155,
	0x154,
	0x0C1,
	0x0BF,
	0x156,
	0x153,
	0x0C2,
	0x0BF,
	0x154,
	0x153,
	0x0C0,
	0x0BE,
	0x155,
	0x152,
	0x0C1,
	0x0BE,
	0x153,
	0x152,
	0x0BF,
	0x0BD,
	0x154,
	0x151,
	0x0C0,
	0x0BD,
	0x152,
	0x151,
	0x0BE,
	0x0BC,
	0x153,
	0x150,
	0x0BF*/
0x084,
0x1ef,
0x19c,
0x09f,
0x09e,
0x19f,
0x1f3,
0x083,
0x084,
0x1ef,
0x19c,
0x09f,
0x09e,
0x19f,
0x1f3,
0x083,
0x084,
0x1ef,
0x19c,
0x09f,
0x09e,
0x19f,
0x1f3,
0x083,
0x084,
0x1ef,
0x19c,
0x09f,
0x09e,
0x19f,
0x1f3,
0x083,
};

const INT16U Slope4[16]=
{
	/*0x155,
	0x154,
	0x153,
	0x152,
	0x151,
	0x152,
	0x153,
	0x154,
	0x155,
	0x154,
	0x153,
	0x152,
	0x151,
	0x152,
	0x153,
	0x154*/
0x1ef,
0x19c,
0x1f3,
0x19f,
0x1ef,
0x19c,
0x1f3,
0x19f,
0x1ef,
0x19c,
0x1f3,
0x19f,
0x1ef,
0x19c,
0x1f3,
0x19f,
};

const INT16U CLPoint[8]=		//Sensor Center is Weight/2, Hight/2 for RGB
{
	#if 0	//for VGA
		//R Center
		0x140,//X=320
		0x0F0,//Y=
		//Gr Center
		0x13F,//
		0x0F0,//
		0x140,
		0x0EF,
		0x13F,
		0x0EF
	#else	//For XQGA
		/*0x400,
		0x300,
		0x400,
		0x300,
		0x400,
		0x300,
		0x400,
		0x300*/
0x2ba,
0x169,
0x2ba,
0x169,
0x2ba,
0x169,
0x2ba,
0x169,

	#endif
};

const INT16U Radius_File_0[512]=
{
	/*0x100,
	0x101,
	0x102,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x102,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x102,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x12a,
	0x12b*/
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x137,
0x134,
0x11d,
0x135,
0x13a,
0x12f,
0x12e,
0x134,
0x169,
0x168,
0x11d,
0x160,
0x16a,
0x164,
0x12e,
0x160,
0x199,
0x192,
0x11d,
0x181,
0x181,
0x18a,
0x12e,
0x186,
0x1b0,
0x1ad,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1a8,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x137,
0x134,
0x11d,
0x135,
0x13a,
0x12f,
0x12e,
0x134,
0x169,
0x168,
0x11d,
0x160,
0x16a,
0x164,
0x12e,
0x160,
0x199,
0x192,
0x11d,
0x181,
0x181,
0x18a,
0x12e,
0x186,
0x1b0,
0x1ad,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1a8,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x137,
0x134,
0x11d,
0x135,
0x13a,
0x12f,
0x12e,
0x134,
0x169,
0x168,
0x11d,
0x160,
0x16a,
0x164,
0x12e,
0x160,
0x199,
0x192,
0x11d,
0x181,
0x181,
0x18a,
0x12e,
0x186,
0x1b0,
0x1ad,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1a8,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x100,
0x137,
0x134,
0x11d,
0x135,
0x13a,
0x12f,
0x12e,
0x134,
0x169,
0x168,
0x11d,
0x160,
0x16a,
0x164,
0x12e,
0x160,
0x199,
0x192,
0x11d,
0x181,
0x181,
0x18a,
0x12e,
0x186,
0x1b0,
0x1ad,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1a8,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
};

const INT16U Radius_File_1[512]=
{
/*	0x101,
	0x102,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x103,
	0x104,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x105,
	0x106,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x12a,
	0x107,
	0x108,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x109,
	0x10a,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x10b,
	0x10c,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x10d,
	0x10e,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x10f,
	0x110,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x111,
	0x112,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x113,
	0x114,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x115,
	0x116,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x117,
	0x118,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x119,
	0x11a,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x11b,
	0x11c,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x11d,
	0x11e,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x11f,
	0x120,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x121,
	0x122,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x123,
	0x124,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x12a,
	0x125,
	0x126,
	0x127,
	0x128,
	0x129,
	0x12a,
	0x12b,
	0x12c*/
0x11a,
0x119,
0x112,
0x119,
0x11b,
0x11a,
0x114,
0x118,
0x151,
0x150,
0x11d,
0x14e,
0x155,
0x14b,
0x12e,
0x148,
0x182,
0x181,
0x11d,
0x16f,
0x17f,
0x179,
0x12e,
0x177,
0x1a7,
0x19e,
0x11d,
0x191,
0x181,
0x1a0,
0x12e,
0x197,
0x1b0,
0x1bd,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1bc,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x11a,
0x119,
0x112,
0x119,
0x11b,
0x11a,
0x114,
0x118,
0x151,
0x150,
0x11d,
0x14e,
0x155,
0x14b,
0x12e,
0x148,
0x182,
0x181,
0x11d,
0x16f,
0x17f,
0x179,
0x12e,
0x177,
0x1a7,
0x19e,
0x11d,
0x191,
0x181,
0x1a0,
0x12e,
0x197,
0x1b0,
0x1bd,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1bc,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x11a,
0x119,
0x112,
0x119,
0x11b,
0x11a,
0x114,
0x118,
0x151,
0x150,
0x11d,
0x14e,
0x155,
0x14b,
0x12e,
0x148,
0x182,
0x181,
0x11d,
0x16f,
0x17f,
0x179,
0x12e,
0x177,
0x1a7,
0x19e,
0x11d,
0x191,
0x181,
0x1a0,
0x12e,
0x197,
0x1b0,
0x1bd,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1bc,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x11a,
0x119,
0x112,
0x119,
0x11b,
0x11a,
0x114,
0x118,
0x151,
0x150,
0x11d,
0x14e,
0x155,
0x14b,
0x12e,
0x148,
0x182,
0x181,
0x11d,
0x16f,
0x17f,
0x179,
0x12e,
0x177,
0x1a7,
0x19e,
0x11d,
0x191,
0x181,
0x1a0,
0x12e,
0x197,
0x1b0,
0x1bd,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1bc,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
0x1b0,
0x1bf,
0x11d,
0x192,
0x181,
0x1a1,
0x12e,
0x1cb,
};

#else

const INT16U Slope4_CV[16]={
0x1f1,0x1ea,0x1aa,0x1a4,0x1fb,0x1e6,0x1ae,0x19c,0x1fa,0x1e3,0x1b0,0x19c,0x1ec,0x1d7,0x1ba,0x1a6
};
const INT16U CLPoint_CV[8]={
0x284,0x14c,0x28d,0x14a,0x28e,0x14b,0x28e,0x154
};
const INT16U MaxTan8_CV[32]={
0x84,0x1f1,0x1ea,0x86,0x9c,0x1a4,0x1aa,0x9a,0x81,0x1fb,0x1e6,0x87,0x9f,0x19c,0x1ae,0x99,0x82,0x1fa,0x1e3,0x88,0x9f,0x19c,0x1b0,0x98,0x85,0x1ec,0x1d7,0x8b,0x9b,0x1a6,0x1ba,0x94
};
const INT16U Radius_File_0_CV[512]={
0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x147,0x14c,0x142,0x147,0x14a,0x14a,0x147,0x147,0x17e,0x179,0x173,0x171,0x177,0x179,0x176,0x177,0x1ac,0x1a7,0x19e,0x197,0x1a7,0x1a5,0x1a4,0x1a7,
0x1dd,0x1d7,0x1ce,0x1bf,0x1d3,0x1d2,0x1d5,0x1dd,0x214,0x208,0x1f7,0x1ee,0x1fb,0x1f7,0x1ff,0x20e,0x24b,0x229,0x21d,0x206,0x21d,0x226,0x22c,0x242,0x262,0x25a,0x249,0x23b,0x243,0x250,0x25c,0x271,
0x28d,0x28e,0x263,0x278,0x26a,0x28e,0x294,0x2ad,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x1d0,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,
0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,
0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x14b,0x14d,0x146,0x14c,0x14c,0x14d,0x151,0x14c,0x183,0x181,0x17b,0x178,0x17d,0x17c,0x184,0x17e,0x1ba,0x1b6,0x1a6,0x19c,0x1b0,0x1ab,0x1af,0x1b2,
0x1f4,0x1e8,0x1d8,0x1cc,0x1d8,0x1d6,0x1dc,0x1ea,0x22c,0x216,0x200,0x1f1,0x1fc,0x1fa,0x208,0x221,0x25c,0x241,0x21d,0x209,0x20d,0x21d,0x22d,0x247,0x26a,0x269,0x24b,0x22f,0x232,0x242,0x251,0x278,
0x28f,0x28c,0x25f,0x1f5,0x251,0x275,0x280,0x298,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x298,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,
0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,
0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x14c,0x14c,0x147,0x14d,0x14d,0x14f,0x14e,0x14c,0x184,0x17f,0x17b,0x179,0x180,0x17c,0x181,0x17d,0x1be,0x1b6,0x1a6,0x19e,0x1b2,0x1ad,0x1af,0x1b3,
0x1f3,0x1e8,0x1d8,0x1ca,0x1dc,0x1d6,0x1dc,0x1ea,0x22d,0x216,0x1fb,0x1f1,0x201,0x1fb,0x208,0x21e,0x259,0x243,0x223,0x209,0x20d,0x21d,0x22d,0x246,0x26a,0x26a,0x244,0x22f,0x232,0x243,0x251,0x278,
0x28f,0x295,0x265,0x1ce,0x257,0x273,0x280,0x299,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2dd,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,
0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,
0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x116,0x145,0x14a,0x139,0x14c,0x149,0x14c,0x146,0x145,0x17d,0x179,0x175,0x176,0x17c,0x175,0x165,0x175,0x1b1,0x1aa,0x19e,0x196,0x1a6,0x1a4,0x19d,0x1a9,
0x1e5,0x1d7,0x1c2,0x1bb,0x1d4,0x1cc,0x1c9,0x1dc,0x223,0x1fd,0x1de,0x1d0,0x1f4,0x1f0,0x1ee,0x208,0x254,0x231,0x200,0x1ea,0x1fe,0x20c,0x210,0x237,0x24c,0x248,0x22e,0x210,0x219,0x22e,0x237,0x258,
0x271,0x274,0x243,0x209,0x237,0x26a,0x265,0x284,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x26d,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,
0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299
};
const INT16U Radius_File_1_CV[512]={
0x12c,0x12f,0x12a,0x12e,0x131,0x132,0x12b,0x12f,0x165,0x15f,0x156,0x15f,0x162,0x163,0x15f,0x15f,0x194,0x192,0x18a,0x186,0x190,0x18d,0x18f,0x193,0x1ca,0x1b8,0x1b1,0x1ad,0x1c1,0x1c0,0x1bf,0x1c3,
0x1f7,0x1ec,0x1e1,0x1da,0x1e9,0x1e9,0x1ed,0x1f8,0x22d,0x215,0x20e,0x206,0x214,0x20b,0x217,0x227,0x249,0x244,0x232,0x226,0x22c,0x239,0x243,0x24a,0x285,0x278,0x263,0x254,0x25c,0x26d,0x27e,0x293,
0x29e,0x276,0x263,0x24f,0x271,0x2cc,0x2ac,0x2d8,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,
0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,0x29e,0x276,0x263,0x24f,0x271,0x293,0x2ac,0x2c5,
0x12e,0x131,0x130,0x136,0x132,0x136,0x133,0x131,0x167,0x169,0x15f,0x164,0x168,0x166,0x16b,0x165,0x1a4,0x19c,0x193,0x18c,0x193,0x194,0x196,0x19b,0x1d7,0x1cf,0x1bd,0x1b5,0x1c6,0x1c1,0x1c4,0x1ce,
0x211,0x204,0x1f1,0x1dc,0x1ec,0x1e9,0x1f6,0x203,0x243,0x22c,0x20d,0x1fb,0x213,0x20c,0x21d,0x22e,0x269,0x253,0x233,0x21b,0x222,0x232,0x23e,0x25a,0x278,0x281,0x258,0x247,0x243,0x250,0x264,0x282,
0x297,0x28c,0x25f,0x237,0x251,0x261,0x288,0x2b2,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,
0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,0x297,0x287,0x25f,0x237,0x251,0x26a,0x288,0x2a6,
0x12e,0x131,0x12f,0x136,0x132,0x136,0x133,0x12f,0x169,0x168,0x15c,0x165,0x168,0x167,0x168,0x165,0x1a3,0x19b,0x193,0x18d,0x194,0x195,0x196,0x19c,0x1d7,0x1d0,0x1c1,0x1b7,0x1c7,0x1c5,0x1c8,0x1ce,
0x210,0x202,0x1ec,0x1df,0x1f3,0x1ec,0x1f6,0x203,0x246,0x22c,0x213,0x1fd,0x215,0x20c,0x21d,0x230,0x26f,0x255,0x233,0x21d,0x222,0x233,0x244,0x25b,0x278,0x282,0x25e,0x252,0x249,0x252,0x264,0x282,
0x297,0x265,0x265,0x243,0x257,0x263,0x288,0x2ad,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,
0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,0x297,0x287,0x265,0x243,0x257,0x26a,0x288,0x2a6,
0x12c,0x12f,0x12c,0x132,0x135,0x135,0x12f,0x12e,0x164,0x162,0x147,0x163,0x167,0x160,0x156,0x162,0x19b,0x190,0x188,0x183,0x18e,0x18a,0x188,0x18f,0x1d4,0x1bb,0x1a9,0x1ad,0x1bc,0x1be,0x1b5,0x1bb,
0x201,0x1ee,0x1d0,0x1ca,0x1e1,0x1db,0x1de,0x1f0,0x22d,0x213,0x1f7,0x1e7,0x201,0x1f7,0x1fe,0x218,0x25c,0x239,0x21a,0x1fc,0x207,0x21e,0x223,0x24e,0x264,0x26c,0x243,0x23c,0x22c,0x23e,0x24d,0x26f,
0x28b,0x2c7,0x250,0x222,0x237,0x199,0x273,0x2a7,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,
0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299,0x28b,0x27d,0x250,0x222,0x237,0x24c,0x273,0x299
};

const INT16U Slope4_CV_D65[16]={
0x1fa,0x1ec,0x1a8,0x19d,0x20b,0x1e8,0x1ad,0x190,0x20c,0x1ea,0x1ab,0x190,0x209,0x1e3,0x1b1,0x191
};
const INT16U CLPoint_CV_D65[8]={
0x288,0x148,0x296,0x144,0x295,0x143,0x298,0x146
};
const INT16U MaxTan8_CV_D65[32]={
0x82,0x1fa,0x1ec,0x85,0x9f,0x19d,0x1a8,0x9a,0x7d,0x20b,0x1e8,0x86,0xa4,0x190,0x1ad,0x99,0x7d,0x20c,0x1ea,0x86,0xa4,0x190,0x1ab,0x99,0x7e,0x209,0x1e3,0x88,0xa4,0x191,0x1b1,0x98
};
const INT16U Radius_File_0_CV_D65[512]={
0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x144,0x144,0x13d,0x146,0x149,0x146,0x144,0x145,0x185,0x17f,0x17c,0x17c,0x181,0x180,0x180,0x182,0x1c4,0x1c1,0x1b5,0x1ae,0x1c2,0x1ba,0x1bd,0x1be,
0x206,0x201,0x1f3,0x1ea,0x1fc,0x1f6,0x1fa,0x203,0x24f,0x23c,0x229,0x222,0x231,0x230,0x23a,0x24d,0x29d,0x27e,0x268,0x24f,0x266,0x276,0x281,0x28c,0x2c8,0x2c7,0x2a3,0x291,0x29d,0x2ac,0x2c2,0x2d3,
0x2fb,0x2db,0x2c2,0x2aa,0x2d0,0x2f3,0x309,0x32d,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x326,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,
0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,
0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x13a,0x138,0x133,0x13a,0x13d,0x13d,0x13c,0x138,0x170,0x16e,0x168,0x163,0x16c,0x16d,0x173,0x16c,0x1a7,0x1a1,0x193,0x189,0x19d,0x199,0x19a,0x1a1,
0x1e2,0x1d9,0x1c6,0x1b8,0x1c7,0x1c3,0x1c9,0x1d6,0x21a,0x208,0x1ec,0x1d6,0x1e7,0x1e8,0x1f9,0x210,0x24e,0x233,0x20b,0x1eb,0x1fc,0x20d,0x223,0x23e,0x25e,0x258,0x234,0x20b,0x21f,0x232,0x249,0x26c,
0x284,0x270,0x244,0x212,0x234,0x261,0x274,0x297,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2c7,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,
0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,
0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x13b,0x13a,0x133,0x13b,0x13e,0x13d,0x13c,0x139,0x173,0x16f,0x167,0x164,0x16d,0x16d,0x172,0x16f,0x1ab,0x1a5,0x194,0x18a,0x19f,0x19a,0x19b,0x1a3,
0x1e4,0x1dd,0x1c6,0x1b8,0x1c8,0x1c3,0x1c9,0x1d7,0x21f,0x20d,0x1ec,0x1d7,0x1e7,0x1eb,0x1f9,0x212,0x251,0x235,0x20f,0x1eb,0x1fb,0x20e,0x220,0x240,0x25e,0x25c,0x231,0x212,0x21c,0x232,0x249,0x26e,
0x284,0x285,0x247,0x218,0x233,0x264,0x270,0x296,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2c8,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,
0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,
0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x109,0x136,0x13a,0x12a,0x13a,0x13a,0x13a,0x138,0x137,0x172,0x16d,0x166,0x160,0x166,0x168,0x166,0x168,0x1a7,0x1a2,0x190,0x184,0x198,0x191,0x194,0x196,
0x1df,0x1d4,0x1bd,0x1a7,0x1be,0x1bb,0x1c4,0x1d1,0x215,0x205,0x1e3,0x1c0,0x1de,0x1db,0x1f1,0x203,0x248,0x22b,0x200,0x1d3,0x1f0,0x1fe,0x217,0x233,0x254,0x24e,0x224,0x203,0x20f,0x222,0x23b,0x258,
0x27d,0x27b,0x23f,0x20b,0x227,0x24e,0x265,0x287,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2bd,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,
0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9
};
const INT16U Radius_File_1_CV_D65[512]={
0x125,0x125,0x123,0x126,0x127,0x12b,0x127,0x126,0x164,0x162,0x157,0x162,0x163,0x163,0x162,0x162,0x1a4,0x1a1,0x199,0x197,0x19a,0x19d,0x19b,0x1a1,0x1e6,0x1db,0x1d2,0x1cd,0x1dd,0x1db,0x1dd,0x1e1,
0x231,0x226,0x212,0x206,0x21b,0x214,0x21a,0x226,0x276,0x25f,0x247,0x23f,0x24f,0x253,0x25e,0x26f,0x2a3,0x2a3,0x282,0x26b,0x27c,0x28d,0x29d,0x2b1,0x2e3,0x2e8,0x2c2,0x2a3,0x2c2,0x2dc,0x2e3,0x2fd,
0x30c,0x142,0x2c2,0x2ae,0x2df,0x355,0x32a,0x35a,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,
0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,0x30c,0x2d5,0x2c2,0x2ae,0x2df,0x310,0x32a,0x343,
0x120,0x11f,0x11e,0x124,0x123,0x125,0x123,0x120,0x154,0x151,0x143,0x14e,0x155,0x156,0x158,0x154,0x18c,0x188,0x17d,0x177,0x184,0x182,0x182,0x186,0x1c5,0x1bc,0x1ab,0x1a0,0x1b2,0x1ac,0x1b2,0x1ba,
0x1fe,0x1f0,0x1d8,0x1c8,0x1d9,0x1d8,0x1e4,0x1f7,0x236,0x21e,0x1fd,0x1e5,0x200,0x1fe,0x210,0x227,0x262,0x245,0x221,0x204,0x210,0x21e,0x236,0x254,0x26e,0x26a,0x23c,0x236,0x229,0x243,0x25b,0x27c,
0x28d,0x29a,0x244,0x212,0x234,0x232,0x27d,0x2a7,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x11f,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,
0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,0x292,0x276,0x244,0x212,0x234,0x256,0x282,0x2ae,
0x120,0x121,0x11e,0x124,0x124,0x125,0x123,0x120,0x155,0x155,0x149,0x150,0x156,0x154,0x158,0x154,0x18e,0x18c,0x17d,0x179,0x186,0x184,0x185,0x188,0x1c8,0x1be,0x1ab,0x1a1,0x1b3,0x1ae,0x1b2,0x1bc,
0x201,0x1f3,0x1db,0x1c9,0x1db,0x1da,0x1e4,0x1f7,0x239,0x21e,0x1fd,0x1e7,0x1ff,0x1fc,0x20e,0x22a,0x268,0x24a,0x21e,0x204,0x20d,0x220,0x236,0x256,0x26e,0x26a,0x23f,0x242,0x22c,0x242,0x25b,0x27e,
0x28d,0x26a,0x247,0x218,0x237,0x21f,0x27d,0x2aa,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x253,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,
0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,0x292,0x276,0x247,0x218,0x237,0x256,0x282,0x2ae,
0x11d,0x11d,0x11b,0x122,0x121,0x123,0x11f,0x11e,0x151,0x152,0x13a,0x14a,0x154,0x151,0x14d,0x150,0x189,0x186,0x17a,0x170,0x17f,0x17b,0x180,0x183,0x1c1,0x1ba,0x1a7,0x192,0x1aa,0x1ab,0x1ad,0x1b4,
0x1f7,0x1ec,0x1d1,0x1b6,0x1ca,0x1cf,0x1db,0x1e7,0x230,0x219,0x1ef,0x1cb,0x1ee,0x1ec,0x205,0x21a,0x261,0x23e,0x212,0x1e8,0x1fe,0x20b,0x22a,0x245,0x268,0x25f,0x235,0x21d,0x21e,0x231,0x252,0x275,
0x288,0x25a,0x23f,0x20b,0x227,0x221,0x270,0x29c,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x108,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,
0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9,0x28e,0x272,0x23f,0x20b,0x227,0x242,0x276,0x2a9
};

const INT16U Slope4_CV_InDoor_Wide[16]={
0x1be,0x17f,0x220,0x1d3,0x1ba,0x179,0x22a,0x1d9,0x1ba,0x178,0x22b,0x1d8,0x1bd,0x176,0x22e,0x1d5
};
const INT16U CLPoint_CV_InDoor_Wide[8]={
0x2b0,0x18b,0x2b2,0x190,0x2b3,0x190,0x2b7,0x190
};
const INT16U MaxTan8_CV_InDoor_Wide[32]={
0x93,0x1be,0x17f,0xab,0x8c,0x1d3,0x220,0x79,0x94,0x1ba,0x179,0xae,0x8b,0x1d9,0x22a,0x76,0x94,0x1ba,0x178,0xae,0x8b,0x1d8,0x22b,0x76,0x93,0x1bd,0x176,0xaf,0x8c,0x1d5,0x22e,0x76
};
const INT16U Radius_File_0_CV_InDoor_Wide[512]={
0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x150,0x151,0x151,0x14e,0x153,0x153,0x14b,0x150,0x189,0x18f,0x184,0x188,0x190,0x189,0x187,0x182,0x1c3,0x1cb,0x1c7,0x1c9,0x1d1,0x1cf,0x1c7,0x1c2,
0x202,0x1ff,0x201,0x200,0x217,0x205,0x201,0x1fe,0x238,0x236,0x23a,0x236,0x24a,0x235,0x235,0x235,0x288,0x27a,0x28a,0x296,0x2aa,0x2c6,0x2aa,0x291,0x329,0x315,0x337,0x351,0x337,0x359,0x31e,0x31a,
0x3e7,0x3b6,0x3a4,0x387,0x352,0x31e,0x395,0x402,0x6d9,0x6ef,0x566,0x385,0x352,0x31e,0x4c5,0x77c,0x8ab,0x93c,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,
0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,
0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x152,0x153,0x153,0x153,0x152,0x152,0x14a,0x14f,0x187,0x18d,0x185,0x188,0x18c,0x182,0x180,0x181,0x1c0,0x1ca,0x1c7,0x1c1,0x1cc,0x1c1,0x1bc,0x1b5,
0x1f0,0x1fd,0x1f6,0x1ef,0x1fb,0x1e3,0x1e3,0x1e2,0x20c,0x21d,0x213,0x209,0x217,0x1f8,0x1ff,0x201,0x23e,0x238,0x23a,0x23d,0x246,0x24e,0x240,0x231,0x27a,0x288,0x28c,0x295,0x285,0x2a6,0x26e,0x26a,
0x2d3,0x2b6,0x2b6,0x2b1,0x296,0x275,0x2b3,0x2e7,0x481,0x46c,0x38f,0x2b6,0x296,0x275,0x387,0x58c,0x65e,0x6b0,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x154,0x154,0x152,0x154,0x153,0x153,0x14a,0x150,0x189,0x18d,0x184,0x18b,0x18e,0x183,0x183,0x183,0x1c2,0x1c9,0x1c3,0x1c3,0x1ce,0x1c3,0x1bc,0x1b7,
0x1ee,0x1fc,0x1f6,0x1ef,0x1fe,0x1e5,0x1e3,0x1e4,0x20e,0x21c,0x213,0x209,0x21b,0x1f9,0x1ff,0x202,0x23d,0x239,0x23a,0x242,0x246,0x24f,0x240,0x231,0x27b,0x28a,0x28c,0x298,0x285,0x2a2,0x26e,0x26c,
0x2d3,0x2b9,0x2b6,0x294,0x296,0x275,0x2b3,0x2e3,0x481,0x450,0x38f,0x2b6,0x296,0x275,0x387,0x5a5,0x65e,0x780,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x14b,0x14e,0x14a,0x14d,0x14e,0x14b,0x13d,0x14b,0x17b,0x17b,0x16c,0x179,0x183,0x174,0x177,0x173,0x1a7,0x1ac,0x1b0,0x1ae,0x1b3,0x1a9,0x19d,0x19a,
0x1cc,0x1d9,0x1d4,0x1cc,0x1d9,0x1c0,0x1be,0x1c0,0x1dc,0x1f7,0x1ec,0x1ea,0x1e8,0x1d3,0x1d4,0x1d5,0x1f2,0x212,0x210,0x218,0x21a,0x230,0x208,0x1f3,0x232,0x247,0x253,0x264,0x25f,0x24d,0x23b,0x223,
0x26c,0x262,0x27a,0x25b,0x26d,0x252,0x25f,0x273,0x3b7,0x3b2,0x320,0x288,0x26d,0x252,0x305,0x480,0x4f4,0x99a,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,
0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7
};
const INT16U Radius_File_1_CV_InDoor_Wide[512]={
0x137,0x139,0x138,0x138,0x13a,0x138,0x135,0x136,0x16c,0x16e,0x168,0x16e,0x16d,0x16d,0x161,0x167,0x1a9,0x1ae,0x1ab,0x1a8,0x1ae,0x1ac,0x1a8,0x19f,0x1e9,0x1ed,0x1e6,0x1e3,0x1f6,0x1e9,0x1e6,0x1e2,
0x210,0x21d,0x214,0x213,0x227,0x213,0x219,0x212,0x25d,0x258,0x259,0x258,0x266,0x269,0x260,0x251,0x2d3,0x2d6,0x2d6,0x2e4,0x2f4,0x319,0x2ea,0x2da,0x35c,0x34d,0x36a,0x37e,0x352,0x31e,0x344,0x34f,
0x54e,0x48e,0x409,0x385,0x352,0x31e,0x497,0x5ed,0x8ab,0xc30,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,
0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,0x8ab,0xaea,0x738,0x385,0x352,0x31e,0x4c5,0x66b,
0x13b,0x138,0x13c,0x13a,0x13e,0x138,0x137,0x137,0x16b,0x170,0x16d,0x16c,0x172,0x167,0x164,0x166,0x1a6,0x1ab,0x1a7,0x1a5,0x1a9,0x19e,0x19d,0x19b,0x1da,0x1e5,0x1df,0x1dd,0x1e4,0x1d6,0x1d3,0x1d9,
0x1fb,0x20c,0x204,0x1fb,0x205,0x1ed,0x1f1,0x1f4,0x21d,0x223,0x223,0x21d,0x21d,0x21a,0x218,0x211,0x25b,0x25e,0x260,0x265,0x26e,0x277,0x261,0x253,0x28c,0x295,0x29d,0x2b6,0x28d,0x275,0x27d,0x284,
0x397,0x32b,0x2e9,0x2b6,0x296,0x275,0x343,0x41a,0x613,0x7f4,0x522,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x13c,0x138,0x13b,0x13b,0x13e,0x139,0x137,0x137,0x16b,0x170,0x16d,0x16e,0x175,0x169,0x164,0x166,0x1a6,0x1ad,0x1ab,0x1a5,0x1ac,0x1a1,0x19d,0x19d,0x1dc,0x1e7,0x1df,0x1e0,0x1e7,0x1d8,0x1d7,0x1d9,
0x1ff,0x20b,0x204,0x1fe,0x207,0x1ef,0x1f1,0x1f6,0x21b,0x227,0x223,0x21d,0x21d,0x21f,0x218,0x212,0x25a,0x25e,0x260,0x268,0x26e,0x27a,0x261,0x254,0x28c,0x296,0x29d,0x2bc,0x28d,0x275,0x27d,0x282,
0x397,0x324,0x2e9,0x2b6,0x296,0x275,0x343,0x40b,0x613,0x7e0,0x522,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,0x65e,0x822,0x56c,0x2b6,0x296,0x275,0x387,0x499,
0x134,0x139,0x136,0x13b,0x139,0x138,0x135,0x13b,0x160,0x165,0x15d,0x165,0x167,0x162,0x148,0x161,0x18a,0x195,0x197,0x196,0x194,0x190,0x18c,0x183,0x1be,0x1c4,0x1be,0x1bc,0x1ca,0x1b5,0x1b0,0x1b0,
0x1d3,0x1e0,0x1e4,0x1db,0x1e5,0x1cb,0x1cc,0x1ca,0x1eb,0x1f9,0x1f5,0x1f1,0x1f5,0x1f2,0x1ec,0x1e4,0x222,0x21e,0x22f,0x23e,0x246,0x254,0x231,0x215,0x246,0x24f,0x26d,0x295,0x26d,0x252,0x246,0x239,
0x311,0x2ba,0x298,0x288,0x26d,0x252,0x2e7,0x35c,0x4a5,0x614,0x40d,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,
0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7,0x4f4,0x630,0x45c,0x288,0x26d,0x252,0x305,0x3b7
};

#endif

const gpCisCali_t g_cali = {
	.ob = (short *)g_ob,

	#if (USE_CV_Prefer == 0)
	.linearity = 0,
	.radius0 = (INT16U *) Radius_File_0,
	.radius1 = (INT16U *) Radius_File_1,
	.clpoint = (INT16U *) CLPoint,
	.maxtan = (INT16U *) MaxTan8,
	.slope = (INT16U *) Slope4,
	.segR = 16,                         /*0x194[4:0]*/
	#else

	.linearity = 0,

    #if (SENSOR_TYPE == 1)
	.radius0 = (INT16U *) Radius_File_0_CV_D65,
	.radius1 = (INT16U *) Radius_File_1_CV_D65,
	.clpoint = (INT16U *) CLPoint_CV_D65,
	.maxtan = (INT16U *) MaxTan8_CV_D65,
	.slope = (INT16U *) Slope4_CV_D65,
    #elif(SENSOR_TYPE == 2)
        .radius0 = (INT16U *) Radius_File_0_CV_InDoor_Wide,
        .radius1 = (INT16U *) Radius_File_1_CV_InDoor_Wide,
        .clpoint = (INT16U *) CLPoint_CV_InDoor_Wide,
        .maxtan = (INT16U *) MaxTan8_CV_InDoor_Wide,
        .slope = (INT16U *) Slope4_CV_InDoor_Wide,
    #endif


	.segR = 15,                         /*0x194[4:0]*/
	#endif

	.gamma = (unsigned int *)g_gamma,
	.awb_thr = (signed short *)g_awb_thr,
	.wb_gain = (unsigned short (*)[2])g_wb_gain,
	.color_matrix = (short *)g_color_matrix
};



#endif
