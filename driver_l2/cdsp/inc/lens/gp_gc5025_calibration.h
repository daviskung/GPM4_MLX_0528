#ifndef __GP_SP5506_CALIBRATION_H__
#define __GP_SP5506_CALIBRATION_H__

#include "..\gp_LensDef.h"


static const short g_ob[15] =
{
	0, // obautoen
	0, // ob_type
	0, //obHOffset
	0, // obVOffset

	1, // obmanuen
	64,//42, // maunob

	1, // wboffseten
	0, // wbo_r
	0, // wbo_gr
	0, // wbo_gb
	0, // wbo_b

	1, // badpixen
	220, // bprthr
	220,//66, // bpgthr
	220, // bpbthr
};

static const unsigned int g_gamma[] =
{
//org
//	0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x040000, 0x111102, 0x051106,
//    0x04440b, 0x04440f, 0x044413, 0x104417, 0x11111a, 0x04411e, 0x110422, 0x041125,
//    0x111029, 0x10442c, 0x10412f, 0x044132, 0x044135, 0x104138, 0x10443b, 0x01043e,
//    0x041041, 0x010143, 0x041046, 0x010448, 0x10404b, 0x04104d, 0x04044f, 0x010151,
//    0x010153, 0x010155, 0x010157, 0x040459, 0x10045b, 0x00105d, 0x01005f, 0x100460,
//    0x004062, 0x040163, 0x004065, 0x100166, 0x010068, 0x001069, 0x10016a, 0x01006c,
//    0x00406d, 0x00106e, 0x00046f, 0x000170, 0x000072, 0x100073, 0x100074, 0x000075,
//    0x000076, 0x000077, 0x000177, 0x000478, 0x001079, 0x00407a, 0x01007b, 0x10007c,
//    0x00007d, 0x00017d, 0x00107e, 0x01007f, 0x100080, 0x000081, 0x000181, 0x001082,
//    0x040083, 0x000084, 0x000085, 0x000485, 0x004086, 0x010087, 0x100088, 0x000089,
//    0x00008a, 0x00018a, 0x00048b, 0x00108c, 0x00108d, 0x00108e, 0x00108f, 0x001090,
//    0x001091, 0x000492, 0x000193, 0x100095, 0x040096, 0x004097, 0x000498, 0x04009a,
//    0x00409b, 0x00049c, 0x01009e, 0x10049f, 0x0100a1, 0x0404a2, 0x0010a4, 0x0100a6,
//    0x0101a7, 0x0404a9, 0x0404ab, 0x0404ad, 0x0404af, 0x0404b1, 0x0104b3, 0x0041b5,
//    0x1010b8, 0x0104ba, 0x1041bc, 0x0104bf, 0x0410c2, 0x1041c4, 0x0104c7, 0x0104ca,
//    0x0110cd, 0x0110d0, 0x1104d3, 0x1044d6, 0x0411d9, 0x1110dd, 0x0441e0, 0x1104e4

/*
0x114500, 0x054505, 0x14510b, 0x114510, 0x145416, 0x11451b, 0x151421, 0x114526,  //modidfy 1
0x11442c, 0x114530, 0x051436, 0x05113b, 0x111440, 0x144544, 0x111149, 0x11114d,
0x111151, 0x111155, 0x041159, 0x11105d, 0x041160, 0x110464, 0x104467, 0x10446a,
0x10446d, 0x110470, 0x010473, 0x041076, 0x104178, 0x01047b, 0x10107e, 0x040480,
0x010182, 0x004085, 0x101087, 0x101089, 0x10108b, 0x10108d, 0x10108f, 0x001091,
0x004093, 0x004095, 0x010196, 0x010198, 0x04019a, 0x10049c, 0x00109e, 0x0040a0,
0x0401a1, 0x0010a3, 0x0040a5, 0x0401a6, 0x0010a8, 0x0100aa, 0x1004ab, 0x0040ad,
0x1004ae, 0x0040b0, 0x0401b1, 0x0010b3, 0x0400b5, 0x0010b6, 0x1001b7, 0x0040b9,
0x1004ba, 0x0100bc, 0x0004bd, 0x0400bf, 0x0040c0, 0x0004c1, 0x0400c3, 0x0040c4,
0x0004c5, 0x1000c7, 0x0100c8, 0x0040c9, 0x0010ca, 0x0001cb, 0x1000cd, 0x0400ce,
0x0100cf, 0x0040d0, 0x0010d1, 0x0004d2, 0x1000d4, 0x0400d5, 0x0100d6, 0x0040d7,
0x0010d8, 0x0004d9, 0x0001da, 0x1000dc, 0x0400dd, 0x0100de, 0x0040df, 0x0010e0,
0x0004e1, 0x0004e2, 0x0001e3, 0x0001e4, 0x0001e5, 0x0001e6, 0x0004e7, 0x0004e8,
0x0010e9, 0x0040ea, 0x0100eb, 0x1000ec, 0x0000ed, 0x0000ee, 0x0001ee, 0x0004ef,
0x0010f0, 0x0040f1, 0x0040f2, 0x0100f3, 0x0400f4, 0x0400f5, 0x1000f6, 0x0000f7,
0x0000f8, 0x0000f9, 0x0001f9, 0x0001fa, 0x0001fb, 0x0004fc, 0x0010fd, 0x0040fe,*/

/*
0x114502, 0x044507, 0x14510c, 0x114511, 0x114417, 0x11441c, 0x051421, 0x145126,
0x04512b, 0x051130, 0x111435, 0x11443a, 0x04453e, 0x111143, 0x044547, 0x10444c,
0x11114f, 0x111153, 0x041157, 0x10445b, 0x04115e, 0x044161, 0x041164, 0x041167,
0x04106b, 0x10416d, 0x104170, 0x010473, 0x041076, 0x104178, 0x04047b, 0x01017d,
0x104080, 0x040482, 0x010184, 0x004186, 0x004089, 0x00408b, 0x00408d, 0x00408f,
0x004091, 0x004093, 0x010095, 0x010196, 0x040198, 0x10049a, 0x00409c, 0x01009e,
0x00049f, 0x0100a1, 0x1004a2, 0x0100a4, 0x0004a5, 0x0400a7, 0x0040a8, 0x1004a9,
0x0400ab, 0x0040ac, 0x0004ad, 0x1000af, 0x0100b0, 0x0040b1, 0x0010b2, 0x0004b3,
0x0004b4, 0x0001b5, 0x0001b6, 0x0001b7, 0x1000b9, 0x1000ba, 0x1000bb, 0x0100bc,
0x0100bd, 0x0040be, 0x0010bf, 0x0010c0, 0x0004c1, 0x0001c2, 0x0001c3, 0x1000c5,
0x1000c6, 0x0400c7, 0x0400c8, 0x0400c9, 0x0100ca, 0x0100cb, 0x0100cc, 0x0400cd,
0x1000ce, 0x0000cf, 0x0000d0, 0x0001d0, 0x0004d1, 0x0010d2, 0x0040d3, 0x0100d4,
0x0400d5, 0x0400d6, 0x1000d7, 0x1000d8, 0x1000d9, 0x1000da, 0x0400db, 0x0400dc,
0x0100dd, 0x0040de, 0x0010df, 0x0010e0, 0x0004e1, 0x1000e3, 0x0400e4, 0x0100e5,
0x0040e6, 0x0010e7, 0x0004e8, 0x0001e9, 0x1000eb, 0x0400ec, 0x0100ed, 0x0010ee,
0x0004ef, 0x0001f0, 0x0400f2, 0x0100f3, 0x0040f4, 0x0010f5, 0x0001f6, 0x2640f8,
*/

/*
0x04510d, 0x051112, 0x111417, 0x14451b, 0x111120, 0x044425, 0x111129, 0x05112d,
0x044432, 0x044436, 0x04443a, 0x04443e, 0x044442, 0x110446, 0x111149, 0x04444d,
0x111051, 0x044154, 0x111058, 0x10445b, 0x04415e, 0x011062, 0x011065, 0x010468,
0x01046b, 0x01046e, 0x041071, 0x041074, 0x104176, 0x010479, 0x04107c, 0x00417e,
0x041081, 0x010183, 0x101086, 0x040488, 0x01018a, 0x10408d, 0x10108f, 0x041091,
0x040493, 0x040495, 0x040497, 0x040499, 0x10109b, 0x00109d, 0x00409f, 0x0101a0,
0x1004a2, 0x0010a4, 0x0100a6, 0x1004a7, 0x0040a9, 0x1001aa, 0x0040ac, 0x1001ad,
0x0100af, 0x0004b0, 0x0400b2, 0x0040b3, 0x0004b4, 0x0400b6, 0x0100b7, 0x0010b8,
0x0004b9, 0x1000bb, 0x0400bc, 0x0100bd, 0x0040be, 0x0010bf, 0x0004c0, 0x0004c1,
0x0001c2, 0x0001c3, 0x0000c5, 0x0000c6, 0x0000c7, 0x0000c8, 0x0000c9, 0x0000ca,
0x0000cb, 0x0000cc, 0x0000cd, 0x0000ce, 0x0000cf, 0x0000d0, 0x0001d0, 0x0001d1,
0x0001d2, 0x0001d3, 0x0001d4, 0x0001d5, 0x0001d6, 0x0001d7, 0x0001d8, 0x0001d9,
0x0000db, 0x0000dc, 0x1000dd, 0x0400de, 0x0400df, 0x0100e0, 0x0040e1, 0x0010e2,
0x0004e3, 0x1000e5, 0x0100e6, 0x0040e7, 0x0004e8, 0x1000ea, 0x0100eb, 0x0004ec,
0x0400ee, 0x0040ef, 0x1001f0, 0x0040f2, 0x1004f3, 0x0040f5, 0x0401f6, 0x0010f8,
0x0100fa, 0x0404fb, 0x1010fd, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff
*/

	0x199900, 0x15960b, 0x155615, 0x15561e, 0x155526, 0x11542e, 0x114534, 0x04543a,
	0x04513f, 0x111144, 0x144449, 0x11114d, 0x144452, 0x051156, 0x05145b, 0x011160,
	0x044464, 0x104468, 0x01116b, 0x10446f, 0x041172, 0x110476, 0x104479, 0x04417c,
	0x04417f, 0x044182, 0x104185, 0x104188, 0x01048b, 0x04108e, 0x010490, 0x101093,
	0x010495, 0x004197, 0x00409a, 0x10109c, 0x00409e, 0x0040a0, 0x0101a1, 0x1004a3,
	0x0040a5, 0x1001a6, 0x0100a8, 0x0010a9, 0x1001aa, 0x0400ac, 0x0100ad, 0x0040ae,
	0x0010af, 0x0010b0, 0x0010b1, 0x0040b2, 0x0040b3, 0x0100b4, 0x0400b5, 0x1000b6,
	0x0000b7, 0x0000b8, 0x0001b8, 0x0004b9, 0x0010ba, 0x0040bb, 0x0040bc, 0x0040bd,
	0x0040be, 0x0040bf, 0x0010c0, 0x0004c1, 0x1001c2, 0x0100c4, 0x0040c5, 0x0040c6,
	0x0040c7, 0x0040c8, 0x0040c9, 0x0100ca, 0x0100cb, 0x0100cc, 0x0400cd, 0x0400ce,
	0x0400cf, 0x0000d0, 0x0000d1, 0x0001d1, 0x0004d2, 0x0010d3, 0x0010d4, 0x0010d5,
	0x0010d6, 0x0010d7, 0x0010d8, 0x0004d9, 0x0004da, 0x0001db, 0x1000dd, 0x0400de,
	0x0100df, 0x0040e0, 0x0010e1, 0x0001e2, 0x1000e4, 0x0100e5, 0x0040e6, 0x0010e7,
	0x0004e8, 0x1000ea, 0x0400eb, 0x0040ec, 0x0010ed, 0x0004ee, 0x1001ef, 0x0400f1,
	0x0100f2, 0x0100f3, 0x0040f4, 0x0010f5, 0x0004f6, 0x0004f7, 0x0001f8, 0x0001f9,
	0x0001fa, 0x0001fb, 0x0004fc, 0x0010fd, 0x0040fe, 0x0000ff, 0x0000ff, 0x0000ff

};

static const unsigned short g_wb_gain[71][2] =
{	/*2000K~8000K*/
    { 55 ,	178},
{ 56 ,	174},
{ 57 ,	170},
{ 58 ,	165},
{ 59 ,	161},
{ 60 ,	157},
{ 61 ,	154},
{ 62 ,	150},
{ 64 ,	147},
{ 65 ,	143},
{ 66 ,	140},
{ 67 ,	137},
{ 68 ,	134},
{ 70 ,	131},
{ 71 ,	128},
{ 72 ,	126},
{ 74 ,	123},
{ 75 ,	121},
{ 77 ,	118},
{ 78 ,	116},
{ 79 ,	114},
{ 81 ,	112},
{ 82 ,	110},
{ 84 ,	108},
{ 85 ,	106},
{ 87 ,	104},
{ 88 ,	102},
{ 90 ,	101},
{ 91 ,	99 },
{ 93 ,	98 },
{ 95 ,	96 },
{ 96 ,	95 },
{ 98 ,	94 },
{ 100,	93 },
{ 101,	91 },
{ 103,	90 },
{ 105,	89 },
{ 106,	88 },
{ 108,	87 },
{ 110,	86 },
{ 111,	85 },
{ 113,	84 },
{ 115,	84 },
{ 116,	83 },
{ 118,	82 },
{ 120,	81 },
{ 122,	80 },
{ 123,	79 },
{ 125,	79 },
{ 127,	78 },
{ 129,	77 },
{ 130,	76 },
{ 132,	76 },
{ 134,	75 },
{ 136,	74 },
{ 137,	73 },
{ 139,	73 },
{ 141,	72 },
{ 143,	71 },
{ 144,	70 },
{ 146,	69 },
{ 148,	68 },
{ 149,	67 },
{ 151,	66 },
{ 153,	65 },
{ 155,	64 },
{ 156,	63 },
{ 158,	62 },
{ 160,	61 },
{ 161,	60 },
{ 163,	59 }
};

static const short g_awb_thr[31] =
{
	220, // awbwinthr

	0*64, // sindata
	1*64, // cosdata

	 40, // Ythr0
	 90, // Ythr1
	150,	// Ythr2
	210, // Ythr3

	// wb thr
	-3, // UL1N1
	 3, // UL1P1
	-3, // VL1N1
	 3, // VL1P1

    -7, //UL1N2
	 6, //UL1P2
	-5, //VL1N2
	 7, // VL1P2

	 -9, // UL1N3
	  8, //UL1P3
	 -8, // VL1N3
     10, //VL1P3

	// without wb thr
	-23, // UL1N1
	-4, // UL1P1
	-21, // VL1N1
	 3, // VL1P1

	-43, //UL1N2
	-4, //UL1P2
	-37, //VL1N2
	 4, // VL1P2

	-57, // UL1N3
	-4, //UL1P3
	-48, // VL1N3
	 4, //VL1P3
};
/*
ColorMatrix[0][0]=2.08507207315936993197
ColorMatrix[0][1]=-1.55820061289419498074
ColorMatrix[0][2]=0.47312853973482504877
ColorMatrix[1][0]=-0.39742740020120054245
ColorMatrix[1][1]=1.86108550954883966710
ColorMatrix[1][2]=-0.46365810934763906914
ColorMatrix[2][0]=0.03770037182641711171
ColorMatrix[2][1]=-1.61856228661050405293
ColorMatrix[2][2]=2.58086191478408721878

*/

static const short g_color_matrix[9] =
{
//	(short) ((1.47621034337316100000 *64) + 0.5),
//	(short) ((-0.50284584256374931000 *64) + 0.5),
//	(short) ((0.02663549919058819800 *64) + 0.5),
//	(short) ((-0.15069646335721187000 *64) + 0.5),
//	(short) ((1.36981925910187160000 *64) + 0.5),
//	(short) ((-0.21912279574465979000  *64) + 0.5),
//	(short) ((-0.02361537630939113100  *64) + 0.5),
//	(short) ((-0.92897062676674558000 *64) + 0.5),
//	(short) ((1.95258600307613680000 *64) + 0.5)

//org
    (short) ((1.5803275562904657292 * 64) + 0.5),
    (short) ((-0.761181140453053628 * 64) + 0.5),
    (short) ((0.1808535841625877327 * 64) + 0.5),
    (short) ((-0.152076307351476924 * 64) + 0.5),
    (short) ((1.4281754120730805190 * 64) + 0.5),
    (short) ((-0.276099104721603538 * 64) + 0.5),
   (short) ((0.0732879617913421155 * 64) + 0.5),
    (short) ((-0.799368536185384948 * 64) + 0.5),
    (short) ((1.7260805743940428325 * 64) + 0.5)
    //64,0,0,
    //0,64,0,
    //0,0,64
};


const INT8U LiTable_rgb[48]=
{	//R*16,Gb/Gr*16,B*16
	0x1e,
	0x2e,
	0x3e,
	0x4e,
	0x5e,
	0x6e,
	0x7e,
	0x8e,
	0x9e,
	0xae,
	0xbe,
	0xce,
	0xde,
	0xee,
	0xfe,
	0xff,
	0x0f,
	0x1f,
	0x2f,
	0x3f,
	0x4f,
	0x5f,
	0x6f,
	0x7f,
	0x8f,
	0x9f,
	0xaf,
	0xbf,
	0xcf,
	0xdf,
	0xef,
	0xff,
	0x07,
	0x17,
	0x27,
	0x37,
	0x47,
	0x57,
	0x67,
	0x77,
	0x87,
	0x97,
	0xa7,
	0xb7,
	0xc7,
	0xd7,
	0xe7,
	0xf7
};

//V5
const INT16U Slope4[16]=
{
	0x14b,
0x141,
0x169,
0x15e,
0x149,
0x140,
0x16a,
0x160,
0x14e,
0x143,
0x166,
0x15b,
0x152,
0x13c,
0x16e,
0x156,};

const INT16U Radius_File_0[512]=
{
	0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x188,
0x187,
0x18b,
0x18a,
0x186,
0x18b,
0x189,
0x18a,
0x1ed,
0x1f3,
0x1f5,
0x1ed,
0x1f7,
0x1f7,
0x1fc,
0x1ee,
0x261,
0x266,
0x26f,
0x267,
0x270,
0x273,
0x265,
0x25c,
0x2f6,
0x306,
0x2f4,
0x30b,
0x2eb,
0x306,
0x2f6,
0x2f3,
0x39c,
0x400,
0x3bb,
0x3dd,
0x379,
0x363,
0x35a,
0x399,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x189,
0x187,
0x18b,
0x184,
0x187,
0x18a,
0x18a,
0x185,
0x1f4,
0x1f8,
0x1f9,
0x1fb,
0x1f7,
0x202,
0x203,
0x1f5,
0x268,
0x277,
0x278,
0x27f,
0x275,
0x285,
0x258,
0x272,
0x2f6,
0x310,
0x31a,
0x315,
0x31a,
0x317,
0x2f5,
0x30b,
0x3b9,
0x3f4,
0x3cf,
0x3cf,
0x3a0,
0x389,
0x389,
0x3bb,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x118,
0x187,
0x187,
0x18b,
0x188,
0x185,
0x189,
0x189,
0x186,
0x1f8,
0x1f4,
0x1fa,
0x1f7,
0x1fc,
0x200,
0x206,
0x1f7,
0x269,
0x273,
0x26d,
0x27c,
0x278,
0x282,
0x26b,
0x26f,
0x308,
0x310,
0x30b,
0x31c,
0x309,
0x322,
0x308,
0x30e,
0x3b9,
0x3f7,
0x3cf,
0x3f7,
0x3a0,
0x3ec,
0x389,
0x3c0,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x124,
0x1bb,
0x1ba,
0x1bd,
0x1c1,
0x1c5,
0x1cb,
0x1ce,
0x1bd,
0x254,
0x25a,
0x260,
0x26d,
0x27d,
0x28f,
0x27c,
0x266,
0x2fd,
0x323,
0x30b,
0x33a,
0x34f,
0x351,
0x365,
0x316,
0x3bf,
0x3e8,
0x3ba,
0x41f,
0x3ea,
0x431,
0x3ea,
0x3e5,
0x48e,
0x505,
0x48e,
0x51a,
0x48e,
0x497,
0x48e,
0x4ca,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
};

const INT16U Radius_File_1[512]=
{
0x15a,
0x158,
0x154,
0x15a,
0x157,
0x15a,
0x157,
0x158,
0x1b7,
0x1bc,
0x1bb,
0x1bc,
0x1be,
0x1c1,
0x1bd,
0x1ba,
0x222,
0x22d,
0x222,
0x22c,
0x22f,
0x230,
0x23f,
0x226,
0x29a,
0x2ab,
0x2b9,
0x2b2,
0x2af,
0x2b3,
0x292,
0x29d,
0x33f,
0x374,
0x352,
0x36a,
0x35b,
0x36b,
0x33f,
0x34d,
0x39c,
0x3eb,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x39c,
0x3de,
0x3bb,
0x397,
0x379,
0x35a,
0x35a,
0x35a,
0x151,
0x152,
0x14f,
0x152,
0x14f,
0x152,
0x151,
0x151,
0x1bd,
0x1c0,
0x1bd,
0x1c0,
0x1be,
0x1c5,
0x1bf,
0x1bb,
0x231,
0x236,
0x23d,
0x23c,
0x237,
0x240,
0x229,
0x238,
0x2af,
0x2b4,
0x2b0,
0x2c2,
0x2b0,
0x2c5,
0x295,
0x2b2,
0x315,
0x38b,
0x367,
0x37f,
0x369,
0x37e,
0x36c,
0x35b,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x150,
0x152,
0x14e,
0x151,
0x14e,
0x151,
0x14e,
0x151,
0x1be,
0x1be,
0x1bd,
0x1bd,
0x1bf,
0x1c2,
0x1c6,
0x1bd,
0x232,
0x236,
0x231,
0x23d,
0x23b,
0x241,
0x239,
0x235,
0x2b7,
0x2b7,
0x2b0,
0x2c4,
0x2c6,
0x2c5,
0x2a7,
0x2af,
0x389,
0x38e,
0x38d,
0x380,
0x377,
0x37b,
0x377,
0x35a,
0x3b9,
0x3f6,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x3b9,
0x3e8,
0x3cf,
0x3b6,
0x3a0,
0x389,
0x389,
0x389,
0x16f,
0x168,
0x16c,
0x170,
0x174,
0x179,
0x170,
0x16e,
0x202,
0x20b,
0x20e,
0x21b,
0x225,
0x22a,
0x223,
0x211,
0x2b1,
0x2bd,
0x2b2,
0x2db,
0x2de,
0x2e4,
0x300,
0x2b5,
0x367,
0x371,
0x371,
0x3b0,
0x3b1,
0x3bc,
0x3a5,
0x37b,
0x41b,
0x463,
0x454,
0x4c0,
0x44a,
0x4bd,
0x41a,
0x450,
0x4d7,
0x589,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
0x4d7,
0x520,
0x4d7,
0x48e,
0x48e,
0x48e,
0x48e,
0x48e,
};

const INT16U MaxTan8[32]=
{
0x0c6,
0x14b,
0x141,
0x0cc,
0x0bb,
0x15e,
0x169,
0x0b6,
0x0c7,
0x149,
0x140,
0x0cd,
0x0ba,
0x160,
0x16a,
0x0b5,
0x0c4,
0x14e,
0x143,
0x0cb,
0x0bd,
0x15b,
0x166,
0x0b7,
0x0c2,
0x152,
0x13c,
0x0d0,
0x0c0,
0x156,
0x16e,
0x0b3,
};

const INT16U CLPoint[8]=
{
0x513,
0x3ee,
0x511,
0x3f1,
0x514,
0x3e5,
0x52b,
0x3ea,
};

const gpCisCali_t g_cali = {
	.ob = (short *)g_ob,
	.linearity = 0,
	.radius0 = (INT16U *) Radius_File_0,
	.radius1 = (INT16U *) Radius_File_1,
	.clpoint = (INT16U *) CLPoint,
	.maxtan = (INT16U *) MaxTan8,
	.slope = (INT16U *) Slope4,
	.segR = 18,                         /*0x194[4:0]*/
	.gamma = (unsigned int *)g_gamma,
	.awb_thr = (signed short *)g_awb_thr,
	.wb_gain = (unsigned short (*)[2])g_wb_gain,
	.color_matrix = (short *)g_color_matrix
};

#endif //#define __GP_SP5506_CALIBRATION_H__
